version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=2h'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  thanos-sidecar:
    image: quay.io/thanos/thanos:v0.32.5
    container_name: thanos-sidecar
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus:9090'
      - '--grpc-address=0.0.0.0:10901'
      - '--http-address=0.0.0.0:10902'
    volumes:
      - prometheus_data:/prometheus
    ports:
      - "10902:10902"
      - "10901:10901"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus

  thanos-query:
    image: quay.io/thanos/thanos:v0.32.5
    container_name: thanos-query
    command:
      - 'query'
      - '--endpoint=thanos-sidecar:10901'
      - '--http-address=0.0.0.0:10903'
      - '--grpc-address=0.0.0.0:10911'
      - '--web.external-prefix=/'
      - '--web.prefix-header=X-Forwarded-Prefix,/'
    ports:
      - "10903:10903"
      - "10911:10911"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - thanos-sidecar

  # Consul service
  consul:
    image: consul:1.15.4
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
      - "8502:8502"
    volumes:
      - ./consul_config/consul.json:/consul/config/consul.json
      - consul_data:/consul/data
    command: 'agent -config-file=/consul/config/consul.json'
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    networks:
      - monitoring
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Consul服务初始化
  consul-init:
    image: alpine:latest
    container_name: consul-init
    volumes:
      - ./consul_config/init_services.sh:/src/init_services.sh:ro
    command: >
      sh -c "
        apk add --no-cache curl bash &&
        cp /src/init_services.sh /tmp/init_services.sh &&
        chmod +x /tmp/init_services.sh &&
        /tmp/init_services.sh
      "
    networks:
      - monitoring
    depends_on:
      consul:
        condition: service_healthy
      prometheus:
        condition: service_started
      windows-exporter:
        condition: service_started
      node-exporter:
        condition: service_started
    restart: "no"

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    environment:
      - ALERTMANAGER_AUTH_TOKEN=your_secure_token_here
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - monitoring

  windows-exporter:
    image: nginx:alpine
    container_name: windows-exporter
    ports:
      - "6080:80"
    volumes:
      - ./windows-metrics:/usr/share/nginx/html
    restart: unless-stopped
    networks:
      - monitoring

  # Node Exporter - 监控Linux系统指标 (端口9100)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring

  # 模拟Windows Exporter - 使用nginx提供metrics接口 (端口9182)
  windows-exporter-mock:
    image: nginx:alpine
    container_name: windows-exporter-mock
    ports:
      - "9182:80"
    volumes:
      - ./windows-metrics:/usr/share/nginx/html
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  prometheus_data:
  consul_data:

networks:
  monitoring:
    driver: bridge

    