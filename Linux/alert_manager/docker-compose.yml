version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=2h'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--storage.tsdb.max-block-duration=2h'
      - '--storage.tsdb.min-block-duration=2h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring

  thanos-sidecar:
    image: quay.io/thanos/thanos:v0.32.5
    container_name: thanos-sidecar
    command:
      - 'sidecar'
      - '--tsdb.path=/prometheus'
      - '--prometheus.url=http://prometheus:9090'
      - '--grpc-address=0.0.0.0:10901'
      - '--http-address=0.0.0.0:10902'
    volumes:
      - prometheus_data:/prometheus
    ports:
      - "10902:10902"
      - "10901:10901"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - prometheus

  thanos-query:
    image: quay.io/thanos/thanos:v0.32.5
    container_name: thanos-query
    command:
      - 'query'
      - '--endpoint=thanos-sidecar:10901'
      - '--http-address=0.0.0.0:10903'
      - '--grpc-address=0.0.0.0:10911'
      - '--web.external-prefix=/'
      - '--web.prefix-header=X-Forwarded-Prefix,/'
    ports:
      - "10903:10903"
      - "10911:10911"
    restart: unless-stopped
    networks:
      - monitoring
    depends_on:
      - thanos-sidecar

  # Consul service commented out since it's running on the host machine
  # consul:
  #   image: consul:latest
  #   container_name: consul
  #   ports:
  #     - "8500:8500"
  #     - "8600:8600/udp"
  #     - "8502:8502"
  #   volumes:
  #     - ./consul_config/consul.json:/consul/config/consul.json
  #     - consul_data:/consul/data
  #   command: 'agent -config-file=/consul/config/consul.json'
  #   environment:
  #     - CONSUL_BIND_INTERFACE=eth0
  #   networks:
  #     - monitoring
  #   restart: unless-stopped

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - "9093:9093"
    environment:
      - ALERTMANAGER_AUTH_TOKEN=your_secure_token_here
    volumes:
      - ./alertmanager/config.yml:/etc/alertmanager/config.yml
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  prometheus_data:
  consul_data:

networks:
  monitoring:
    driver: bridge